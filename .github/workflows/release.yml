name: Release Build

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: http-framework-linux
            asset_name: http-framework-linux.tar.gz
          - os: windows-latest
            artifact_name: http-framework-windows
            asset_name: http-framework-windows.zip
          - os: macos-latest
            artifact_name: http-framework-macos
            asset_name: http-framework-macos.tar.gz

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup MSVC (Windows)
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1.3

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build libssl-dev zlib1g-dev

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake ninja openssl zlib

    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=20

    - name: Build
      run: cmake --build build --config Release --parallel

    - name: Package (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir -p dist
        cp build/http-framework dist/
        cp README.md dist/
        cp LICENSE dist/ || echo "LICENSE not found"
        tar -czf ${{ matrix.asset_name }} -C dist .

    - name: Package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir dist
        copy build\Release\http-framework.exe dist\
        copy README.md dist\
        copy LICENSE dist\ 2>nul || echo LICENSE not found
        powershell Compress-Archive -Path dist\* -DestinationPath ${{ matrix.asset_name }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.asset_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: HTTP Framework ${{ github.ref_name }}
        body: |
          ## HTTP Framework Release ${{ github.ref_name }}
          
          ### Features
          - Modern C++20 HTTP/WebSocket server
          - GraphQL and gRPC support
          - Event Sourcing architecture
          - Circuit Breaker pattern
          - Real-time streaming (SSE)
          - Built-in tracing and monitoring
          
          ### Platforms
          - Linux x64
          - Windows x64
          - macOS x64
          
          ### Installation
          Download the appropriate binary for your platform and run directly.
        draft: false
        prerelease: false

    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./http-framework-linux/http-framework-linux.tar.gz
        asset_name: http-framework-linux.tar.gz
        asset_content_type: application/gzip

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./http-framework-windows/http-framework-windows.zip
        asset_name: http-framework-windows.zip
        asset_content_type: application/zip

    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./http-framework-macos/http-framework-macos.tar.gz
        asset_name: http-framework-macos.tar.gz
        asset_content_type: application/gzip 